
############################################################################
#  CHAP_map_all_dataPoint_to_simTime.py -- A python script to map all FES  #
#    data points to simulation time and order parameters in the trajectory #
#  CHAP_map_all_dataPoint_to_simTime.py is part of the CHAPERONg package   #
#  Input parameters are generated by other scripts in CHAPERONg and are    #
#    read by this script                                                   #
#  CHAPERONg -- An automation program for GROMACS MD simulations and       #
#    trajectory analyses                                                   #
############################################################################

__author__  = 'Abeeb A. Yekeen'
__email__   = 'contact@abeebyekeen.com'
__date__    = '2022.10.18'
__version__ = '1.0'
__status__  = 'Production'


import os

# Function to record matching data points from the time-order_para1-2
def recordHits():
    os.chdir('collect_mappings_extra')
    with open(readinFile , "w") as mapping:
        for candidate in currentHitList:
            mapping.write(candidate)
        os.chdir('../')
        # if filecount == 1:
        #     with open("dataPointsRecorded.dat" , "w") as dtpRecorded:
        #         dtpRecorded.write(readinFile+"\n")
        # elif filecount > 1:
        #     with open("dataPointsRecorded.dat" , "a") as dtpRecorded:
        #         dtpRecorded.write(readinFile+"\n")                

with open("OrderParameters1_2_dG_nogap-sorted.dat", "r") as paramets:
    filecount=0
    milestone_factor=0
    allDataPts=paramets.readlines()
    for datapt in allDataPts:
        current_datapt = datapt.strip("\n")
        filecount+=1
        if filecount == 2:
            print("\n Number of data point processed:       1 "+"of "+str(len(allDataPts)))
        if filecount%200 == 0 and filecount > 0 and filecount < 1000:
            milestone_factor+=1
            milestone_count=milestone_factor*200
            print(" Number of data points processed:    "+str(milestone_count)+" of "+str(len(allDataPts)))
        if filecount == 1000:
            milestone_factor+=1
            milestone_count=milestone_factor*200
            print(" Number of data points processed:   "+str(milestone_count)+" of "+str(len(allDataPts)))
            milestone_factor=2
        if filecount%500 == 0 and filecount > 1000 and filecount <= 9500:
            milestone_factor+=1
            milestone_count=milestone_factor*500
            print(" Number of data points processed:   "+str(milestone_count)+" of "+str(len(allDataPts)))
        if filecount == 10000:
            milestone_factor+=1
            milestone_count=milestone_factor*500
            print(" Number of data points processed:  "+str(milestone_count)+" of "+str(len(allDataPts)))
            milestone_factor=10
        if filecount%1000 == 0 and filecount > 10000:
            milestone_factor+=1
            milestone_count=milestone_factor*1000
            print(" Number of data points processed:  "+str(milestone_count)+" of "+str(len(allDataPts)))
        spltcurrent_datapt = current_datapt.split("\t")
        Par1 = spltcurrent_datapt[0]
        Par1float = float(Par1)
        Par1float_decimal = float("{:.8f}".format(Par1float))
        Par2 = spltcurrent_datapt[1]
        Par2float = float(Par2)
        Par2float_decimal = float("{:.8f}".format(Par2float))
        apprxPar1 = float(Par1[:4])
        apprxPar2 = float(Par2[:4])
        with open("SimTime_OrderParameters1_2.dat", "r") as timedparamet:
            timedPairLines = timedparamet.readlines()
            linecount = 0
            currentHitList = []
            for timeddatapair in timedPairLines:
                spltimeddatapair = timeddatapair.rstrip("\n").split("\t")
                if (float(spltimeddatapair[1]) <= (apprxPar1+0.004)) and (float(spltimeddatapair[1]) >= (apprxPar1-0.004)) and \
                    (float(spltimeddatapair[2]) <= (apprxPar2+0.004)) and (float(spltimeddatapair[2]) >= (apprxPar2-0.004)):
                    headertxt = "Time"+"\t"+"OrderPar1"+"\t"+"OrderPar2"+"\t"+"Energy"+"\n"
                    fesdat = "----"+"\t"+str(Par1float_decimal)+"\t"+str(Par2float_decimal)+"\t"+str(spltcurrent_datapt[2])+"\n"
                    candidateHit = str((timeddatapair).rstrip())+"\t"+str(spltcurrent_datapt[2])+"\n"
                    if linecount == 0:
                        currentHitList.append(headertxt)
                        currentHitList.append(fesdat)
                    currentHitList.append(candidateHit)
                    linecount+=1
            # if zero matching data point is found, use a wider search range
            if linecount == 0:
                # print("no hit found, looping for the 2nd time")
                for timeddatapair in timedPairLines:
                    spltimeddatapair = timeddatapair.rstrip("\n").split("\t")
                    if (float(spltimeddatapair[1]) <= (apprxPar1+0.006)) and (float(spltimeddatapair[1]) >= (apprxPar1-0.006)) and \
                        (float(spltimeddatapair[2]) <= (apprxPar2+0.006)) and (float(spltimeddatapair[2]) >= (apprxPar2-0.006)):
                        headertxt = "Time"+"\t"+"OrderPar1"+"\t"+"OrderPar2"+"\t"+"Energy"+"\n"
                        fesdat = "----"+"\t"+str(Par1float_decimal)+"\t"+str(Par2float_decimal)+"\t"+str(spltcurrent_datapt[2])+"\n"
                        candidateHit = str((timeddatapair).rstrip())+"\t"+str(spltcurrent_datapt[2])+"\n"
                        if linecount == 0:
                            currentHitList.append(headertxt)
                            currentHitList.append(fesdat)
                        currentHitList.append(candidateHit)
                        linecount+=1
                # if zero matching data point is found, use even a wider search range
                if linecount == 0:
                    # print("no hit found, looping for the 3rd time")
                    for timeddatapair in timedPairLines:
                        spltimeddatapair = timeddatapair.rstrip("\n").split("\t")
                        if (float(spltimeddatapair[1]) <= (apprxPar1+0.008)) and (float(spltimeddatapair[1]) >= (apprxPar1-0.008)) and \
                            (float(spltimeddatapair[2]) <= (apprxPar2+0.008)) and (float(spltimeddatapair[2]) >= (apprxPar2-0.008)):
                            headertxt = "Time"+"\t"+"OrderPar1"+"\t"+"OrderPar2"+"\t"+"Energy"+"\n"
                            fesdat = "----"+"\t"+str(Par1float_decimal)+"\t"+str(Par2float_decimal)+"\t"+str(spltcurrent_datapt[2])+"\n"
                            candidateHit = str((timeddatapair).rstrip())+"\t"+str(spltcurrent_datapt[2])+"\n"
                            if linecount == 0:
                                currentHitList.append(headertxt)
                                currentHitList.append(fesdat)
                            currentHitList.append(candidateHit)
                            linecount+=1
                    # if zero matching data point is found, use even a wider search range
                    # continue this cycle for a couple more times as found below
                    if linecount == 0:
                        # print("no hit found, looping for the 4th time")
                        for timeddatapair in timedPairLines:
                            spltimeddatapair = timeddatapair.rstrip("\n").split("\t")
                            if (float(spltimeddatapair[1]) <= (apprxPar1+0.01)) and (float(spltimeddatapair[1]) >= (apprxPar1-0.01)) and \
                                (float(spltimeddatapair[2]) <= (apprxPar2+0.01)) and (float(spltimeddatapair[2]) >= (apprxPar2-0.01)):
                                headertxt = "Time"+"\t"+"OrderPar1"+"\t"+"OrderPar2"+"\t"+"Energy"+"\n"
                                fesdat = "----"+"\t"+str(Par1float_decimal)+"\t"+str(Par2float_decimal)+"\t"+str(spltcurrent_datapt[2])+"\n"
                                candidateHit = str((timeddatapair).rstrip())+"\t"+str(spltcurrent_datapt[2])+"\n"
                                if linecount == 0:
                                    currentHitList.append(headertxt)
                                    currentHitList.append(fesdat)
                                currentHitList.append(candidateHit)
                                linecount+=1
                        # if zero matching data point is found, use even a wider search range and
                        if linecount == 0:
                            # print("no hit found, looping for the 5th time")
                            for timeddatapair in timedPairLines:
                                spltimeddatapair = timeddatapair.rstrip("\n").split("\t")
                                if (float(spltimeddatapair[1]) <= (apprxPar1+0.013)) and (float(spltimeddatapair[1]) >= (apprxPar1-0.013)) and \
                                    (float(spltimeddatapair[2]) <= (apprxPar2+0.013)) and (float(spltimeddatapair[2]) >= (apprxPar2-0.013)):
                                    headertxt = "Time"+"\t"+"OrderPar1"+"\t"+"OrderPar2"+"\t"+"Energy"+"\n"
                                    fesdat = "----"+"\t"+str(Par1float_decimal)+"\t"+str(Par2float_decimal)+"\t"+str(spltcurrent_datapt[2])+"\n"
                                    candidateHit = str((timeddatapair).rstrip())+"\t"+str(spltcurrent_datapt[2])+"\n"
                                    if linecount == 0:
                                        currentHitList.append(headertxt)
                                        currentHitList.append(fesdat)
                                    currentHitList.append(candidateHit)
                                    linecount+=1
                            if linecount == 0:
                                # print("no hit found, looping for the 6th time")
                                for timeddatapair in timedPairLines:
                                    spltimeddatapair = timeddatapair.rstrip("\n").split("\t")
                                    if (float(spltimeddatapair[1]) <= (apprxPar1+0.015)) and (float(spltimeddatapair[1]) >= (apprxPar1-0.015)) and \
                                        (float(spltimeddatapair[2]) <= (apprxPar2+0.015)) and (float(spltimeddatapair[2]) >= (apprxPar2-0.015)):
                                        headertxt = "Time"+"\t"+"OrderPar1"+"\t"+"OrderPar2"+"\t"+"Energy"+"\n"
                                        fesdat = "----"+"\t"+str(Par1float_decimal)+"\t"+str(Par2float_decimal)+"\t"+str(spltcurrent_datapt[2])+"\n"
                                        candidateHit = str((timeddatapair).rstrip())+"\t"+str(spltcurrent_datapt[2])+"\n"
                                        if linecount == 0:
                                            currentHitList.append(headertxt)
                                            currentHitList.append(fesdat)
                                        currentHitList.append(candidateHit)
                                        linecount+=1
                                # if linecount == 0:
                                #     # print("no hit found, looping for the 7th and final time\n")
                                #     for timeddatapair in timedPairLines:
                                #         spltimeddatapair = timeddatapair.rstrip("\n").split("\t")
                                #         if (float(spltimeddatapair[1]) <= (apprxPar1+0.017)) and (float(spltimeddatapair[1]) >= (apprxPar1-0.017)) and \
                                #             (float(spltimeddatapair[2]) <= (apprxPar2+0.017)) and (float(spltimeddatapair[2]) >= (apprxPar2-0.017)):
                                #             headertxt = "Time"+"\t"+"OrderPar1"+"\t"+"OrderPar2"+"\t"+"Energy"+"\n"
                                #             fesdat = "----"+"\t"+str(Par1float_decimal)+"\t"+str(Par2float_decimal)+"\t"+str(spltcurrent_datapt[2])+"\n"
                                #             candidateHit = str((timeddatapair).rstrip())+"\t"+str(spltcurrent_datapt[2])+"\n"
                                #             if linecount == 0:
                                #                 currentHitList.append(headertxt)
                                #                 currentHitList.append(fesdat)
                                #             currentHitList.append(candidateHit)
                                #             linecount+=1
            if linecount > 0:
                readinFile = "DataPt_"+str(filecount)+".txt"
                recordHits()
    print(" Number of data points processed:  "+str(filecount)+" of "+str(len(allDataPts)))